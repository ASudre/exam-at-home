type Questionnaire @model
@auth(rules: [{allow: private}]) {
  id: ID!
  createdAt: AWSDateTime
  questions: [Question] @connection(name: "ByQuestionnaire")
}

type Question @model
@auth(rules: [
  { allow: groups, groups: ["Admin"], operations: [create, update, read, delete] },
  { allow: groups, groupsField: "groupsCanAccess", operations: [read] },
]) {
  id: ID!
  imageKey: String!
  imageName: String!
  answer: String
    @auth(rules: [
      { allow: groups, groups: ["Admin"] }
    ])
  createdAt: AWSDateTime
  questionnaire: Questionnaire @connection(name: "ByQuestionnaire")
  answers: [Answer] @connection(name: "ByQuestion")
  groupsCanAccess: [String]
}

type Answer @model
@auth(rules: [
  { allow: owner, operations: [create, read, update, delete] },
  { allow: groups, groups: ["Admin"], operations: [read] }
]) {
  id: ID!
  question: Question @connection(name: "ByQuestion")
  answer: String!
  owner: String
  createdAt: AWSDateTime
}

type Query {
  getQuestionnaireById(id: String): Questionnaire
}
